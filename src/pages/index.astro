---
import Gradient from "../components/Gradient.astro"
import WaitlistInput from "../components/WaitlistInput.astro"
import Layout from "../layouts/Layout.astro"
// import Card from "../components/Card.astro"
---

<Layout title="Welcome to Astro.">
  <div class="astro-a"></div>
  <img src="/logo 2.png" alt="alizarin crimson logo" class="logo" />
  <main>
    <div>
      <div
        class="lg:text-8xl flex text-3xl text-center text-wrapper capitalize"
      >
        <h2 class="font-bold">Alizarin Crimson</h2>
      </div>
      <!-- <span class="subtext">creating designs</span> -->
      <!-- <WaitlistInput /> -->
    </div>
  </main>
</Layout>

<script>
  import { gsap } from "gsap"
  import SplitTextJS from "split-text-js"

  const logo = document.querySelector(".logo")

  const titles = gsap.utils.toArray("h2")
  const loadingTL = gsap.timeline({
    defaults: {
      ease: "power2.out",
    },
    onComplete: () => {
      tl.resume()
    },
  })
  const tl = gsap.timeline({ paused: true, repeat: 0 })

  loadingTL
    .fromTo(
      logo,
      {
        top: "50%",
        y: "-50%",
      },
      {
        top: "12px",
        y: "0%",
        duration: 1.5,
        ease: "power2.out",
      }
    )
    .from("#title", {
      y: -100,
      opacity: 0,
      duration: 1,
      ease: "power2.out",
    })

  titles.forEach(title => {
    const splitTitle = new SplitTextJS(title)

    gsapTextArrayAnimation(splitTitle.chars)
  })

  function gsapTextArrayAnimation(char: any, text?: any) {
    tl.from(
      char,
      {
        opacity: 0,
        y: 40,
        rotateX: -90,
        stagger: 0.02,
      },
      "<"
    )
  }
</script>

<style>
  main {
    display: grid;
    place-items: center;
    min-height: 100vh;
    max-width: 1444px;
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }
  .astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    z-index: -1;
    width: 200px;
    height: 200px;
    flex-shrink: 0;
    border-radius: 500px;
    background: rgba(255, 255, 255, 0.1);
    filter: blur(50px);
  }

  img {
    position: absolute;
    top: 12px;
    left: 50%;
    transform: translatex(-50%);
    width: 70px;
    /* margin: auto; */
  }
  h1 {
    font-size: 5rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
  .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
</style>
